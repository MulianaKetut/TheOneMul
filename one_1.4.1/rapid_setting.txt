## Default settings for the simulation### Scenario settingsScenario.name = rapid_scenario-%%Group.router%%-SizeM-%%Events1.size%%-ttl-%%Group.msgTtl%%-Buffer-%%Group.bufferSize%%-Interval-%%Events1.interval%%-AVERAGE_DELAY#Scenario.name = rapid_scenario-%%Group.router%%-SizeM-%%Events1.size%%-Interval-%%Events1.interval%%-MISSED_DEADLINES#Scenario.name = rapid_scenario-%%Group.router%%-SizeM-%%Events1.size%%-Interval-%%Events1.interval%%-MAXIMUM_DELAYScenario.simulateConnections = trueScenario.updateInterval = 0.1# 43200 == 12h# 18000 == 5h# 64800 == 18hScenario.endTime = 64800#Scenario.endTime = 18000## Interface-specific settings:# type : which interface class the interface belongs to# For different types, the sub-parameters are interface-specific# For SimpleBroadcastInterface, the parameters are:# transmitSpeed : transmit speed of the interface (bytes per second) # transmitRange : range of the interface (meters)# "Bluetooth" interface for all nodes#btInterface.type = SimpleBroadcastInterface# Transmit speed of 2 Mbps = 250kBpsbtInterface.transmitSpeed = 1MbtInterface.transmitRange = 10# "highSpeed" interface for all nodesbtInterface1.type = SimpleBroadcastInterface# Transmit speed of 6 Mbps = 750kBpsbtInterface1.transmitSpeed = 6MbtInterface1.transmitRange = 100# High speed, long range, interface for group 4highspeedInterface.type = SimpleBroadcastInterfacehighspeedInterface.transmitSpeed = 5MhighspeedInterface.transmitRange = 1000# Define 6 different node groupsScenario.nrofHostGroups = 4## Group-specific settings:# groupID : Group's identifier. Used as the prefix of host names# nrofHosts: number of hosts in the group# movementModel: movement model of the hosts (valid class name from movement package)# waitTime: minimum and maximum wait times (seconds) after reaching destination# speed: minimum and maximum speeds (m/s) when moving on a path# bufferSize: size of the message buffer (bytes)# router: router used to route messages (valid class name from routing package)# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite## Group and movement model specific settings# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )#       for ShortestPathMapBasedMovement# okMaps : which map nodes are OK for the group (map file indexes), default=all #          for all MapBasedMovent models# routeFile: route's file path - for MapRouteMovement# routeType: route's type - for MapRouteMovement# Common settings for all groupsGroup.movementModel = ShortestPathMapBasedMovement#Group.router = EpidemicRouter#Group.router = RapidRouter#Group.router = RapidRouterTestGroup.router = RapidRouterTest##rapidRouterDE#testRapidDE#Group.router = DecisionEngineRapidRouter#DecisionEngineRapidRouter.decisionEngine = testRapidDE#RapidWithKnapsackRouter#Group.router = DecisionEngineRapidKnapsackRouter#DecisionEngineRapidKnapsackRouter.decisionEngine = RapidWithKnapsackRouter##DE#Group.router = DecisionEngineRouter#DecisionEngineRouter.decisionEngine = community.DistributedBubbleRap#DecisionEngineRouter.lambda = 3#DecisionEngineRouter.gamma = 3#DecisionEngineRouter.familiarThreshold = 6Group.bufferSize = 10MGroup.waitTime = 0, 60# All nodes have the bluetooth interfaceGroup.nrofInterfaces = 1#Group.interface1 = btInterface1Group.interface1 = btInterface# Message TTL of 300 minutes (5 hours)Group.msgTtl = 180Group.nrofHosts = 100#Group.sendQueue = 3# group1 specific settingsGroup1.groupID = c# cars can drive only on roadsGroup1.okMaps = 1# 10-50 km/hGroup1.speed = 2.7, 13.9# The Tram groupsGroup2.groupID = tGroup2.bufferSize = 10MGroup2.movementModel = MapRouteMovementGroup2.routeFile = data/tram3.wktGroup2.routeType = 1Group2.waitTime = 10, 30Group2.speed = 7, 10Group2.nrofHosts = 2Group2.nrofInterfaces = 2Group2.interface1 = highspeedInterfaceGroup2.interface2 = btInterfaceGroup3.groupID = tGroup3.bufferSize = 10MGroup3.movementModel = MapRouteMovementGroup3.routeFile = data/tram4.wktGroup3.routeType = 2Group3.waitTime = 10, 30Group3.speed = 7, 10Group3.nrofHosts = 2Group4.groupID = tGroup4.bufferSize = 10MGroup4.movementModel = MapRouteMovementGroup4.routeFile = data/tram10.wktGroup4.routeType = 2Group4.waitTime = 10, 30Group4.speed = 7, 10Group4.nrofHosts = 2## Message creation parameters # How many event generatorsEvents.nrof = 1# Class of the first event generatorEvents1.class = MessageEventGenerator# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)#Events1.interval = 580,620#Events1.interval = 290,310Events1.interval = 120,240# Message sizes (500kB - 1MB)Events1.size = 100k,400k# range of message source/destination addressesEvents1.hosts = 0,105# Message ID prefixEvents1.prefix = M## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 1# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 4500, 3400# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000## Map based movement -movement model specific settingsMapBasedMovement.nrofMapFiles = 4MapBasedMovement.mapFile1 = data/roads.wktMapBasedMovement.mapFile2 = data/main_roads.wktMapBasedMovement.mapFile3 = data/pedestrian_paths.wktMapBasedMovement.mapFile4 = data/shops.wkt## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 6# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)#Report.reportDir = reports/Rapid/test1/send200kWithDrop/#Report.reportDir = reports/RapidDE/test/tanpaDeleteAck/Report.reportDir = reports/RapidKnapsack/test/24jam1/#Report.reportDir = reports/Epidemic/test1/send200kWithDrop/# Report classes to loadReport.report1 = MessageStatsReportReport.report2 = LatencyPerContactReportReport.report3 = MessageDeliveredPerContactReportReport.report4 = PercentageMessageDeliveredPerContactReportReport.report5 = OverheadPerContactReportReport.report6 = BufferOccupancyPerContact## Default settings for some routers settingsProphetRouter.secondsInTimeUnit = 30SprayAndWaitRouter.nrofCopies = 6SprayAndWaitRouter.binaryMode = true## Optimization settings -- these affect the speed of the simulation## see World class for details.Optimization.cellSizeMult = 5Optimization.randomizeUpdateOrder = true## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$